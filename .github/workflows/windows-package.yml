name: Windows package (jlink + jpackage)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

jobs:
  build-and-package:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x64, x86 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install WiX (for MSI)
        run: choco install wixtoolset -y

      - name: Install local JARs from jar/
        shell: pwsh
        run: |
          if (Test-Path "jar") {
            Write-Host "Found jar/ directory. Installing local JARs to Maven local repository..."
            Get-ChildItem -Path jar -Filter "*.jar" | ForEach-Object {
              $name = $_.BaseName.ToLower()
              if ($name -like '*update4j*') {
                Write-Host "Skipping installation of $($_.Name) (update4j is resolved from Maven Central)"
              } else {
                Write-Host "Installing $($_.FullName)"
                & mvn install:install-file -Dfile="$($_.FullName)" -DgroupId="local.jars" -DartifactId="$($_.BaseName)" -Dversion="1.0.0-local" -Dpackaging=jar
              }
            }
          } else {
            Write-Host "No jar/ directory found; skipping local JAR install."
          }

      - name: Build with Maven
        run: mvn -DskipTests package

      - name: Run packaging script for ${{ matrix.arch }}
        run: pwsh scripts\package-windows.ps1 -AppVersion ${{ github.ref_name }} -JfxVersion 21.0.0 -Arch ${{ matrix.arch }}

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.arch }}
          path: dist/${{ matrix.arch }}

  release:
    needs: build-and-package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # A permissão continua necessária
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # Baixa todos os artefatos para uma pasta chamada "artifacts"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # O token é lido automaticamente, mas é bom ser explícito
          token: ${{ secrets.GITHUB_TOKEN }}
          # O nome da release será o mesmo da tag
          name: Release ${{ github.ref_name }}
          # Pega todos os arquivos .msi da pasta onde foram baixados
          files: |
            artifacts/installer-x64/*.msi
            artifacts/installer-x86/*.msi
